---
beekeeper:
  enabled: true
  securityWarnings:
    enabledForCore: true
    enabledForPlugins: true
  upgrades:
    autoDowngradePlugins: true
    autoUpgradePlugins: true
jenkins:
  agentProtocols:
  - "Diagnostic-Ping"
  - "JNLP4-connect"
  - "OperationsCenter2"
  - "Ping"
kube:
  podTemplatesConfiguration:
    templates:
      - name: "nd-aws-sam"
        label: "alpine sam aws-sam"
        annotations:
          - key: "iam.amazonaws.com/role"
            value: "arn:aws:iam::737635261618:role/_nd-cb-cbcore-configuration-worker-d1f1721f"
        containers:
          - name: "node10"
            image: "node:10-alpine"
            alwaysPullImage: true
            ttyEnabled: true
          - name: "node12"
            image: "node:12-alpine"
            alwaysPullImage: true
            ttyEnabled: true
          - name: "golang1-14"
            image: "golang:1.14-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            command: "cat"
          - name: "golang1-13"
            image: "golang:1.13-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            command: "cat"
          - name: "golang1-12"
            image: "golang:1.12-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            command: "cat"
          - name: "aws-sam"
            image: "737635261618.dkr.ecr.us-west-2.amazonaws.com/nbcwebops/eks/base/aws-sam:0.4.9"
            alwaysPullImage: true
            ttyEnabled: true
        hostNetwork: false
        nodeUsageMode: NORMAL
        showRawYaml: false
        volumes:
          - emptyDirVolume:
              memory: false
              mountPath: "/var/lib/docker"
        yamlMergeStrategy: "override"
      - name: "nd-lean"
        label: "lean"
        annotations:
          - key: "iam.amazonaws.com/role"
            value: "arn:aws:iam::737635261618:role/_nd-cb-cbcore-configuration-worker-d1f1721f"
        containers:
          - name: "node12"
            image: "node:12-alpine"
            alwaysPullImage: true
            ttyEnabled: true
          - name: "golang1-14"
            image: "golang:1.14-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            command: "cat"
          - name: "deployinator"
            image: "737635261618.dkr.ecr.us-west-2.amazonaws.com/nbcwebops/eks/base/deployinator:0.1.0"
            alwaysPullImage: true
            ttyEnabled: true
            envVars:
              - key: "DOCKER_HOST"
                value: "tcp://localhost:2375"
          - name: "docker-daemon"
            image: "docker:19.03.6-dind"
            alwaysPullImage: true
            envVars:
              - key: "DOCKER_TLS_CERTDIR"
                value: ""
            privileged: true
            resourceLimitCpu: "2"
            resourceLimitMemory: "8Gi"
            resourceRequestCpu: "1"
            resourceRequestMemory: "1Gi"
            ttyEnabled: true
        hostNetwork: false
        nodeUsageMode: NORMAL
        showRawYaml: false
        volumes:
          - emptyDirVolume:
              memory: false
              mountPath: "/var/lib/docker"
        yamlMergeStrategy: "override"
      - name: "nd-multibuilder"
        label: "buildbox bi alpine serverless nd-multibuilder"
        annotations:
          - key: "iam.amazonaws.com/role"
            value: "arn:aws:iam::737635261618:role/_nd-cb-cbcore-configuration-worker-d1f1721f"
        containers:
          - name: "node8"
            image: "node:8-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            runAsGroup: "1000"
            runAsUser: "1000"
          - name: "node10"
            image: "node:10-alpine"
            alwaysPullImage: true
            ttyEnabled: true
            runAsGroup: "1000"
            runAsUser: "1000"
          - name: "alpine-deploy-builder"
            image: "737635261618.dkr.ecr.us-east-1.amazonaws.com/nbcwebops/eks/base/alpine-deploy-builder:2"
            alwaysPullImage: true
            ttyEnabled: true
            runAsGroup: "1000"
            runAsUser: "1000"
        hostNetwork: false
        nodeUsageMode: NORMAL
        showRawYaml: false
        volumes:
          - emptyDirVolume:
              memory: false
              mountPath: "/var/lib/docker"
        yamlMergeStrategy: "override"
      - name: "cbcore-configuration-buildbox"
        label: "buildbox default docker dind java gradle python terraform terragrunt skaffold"
        annotations:
          - key: "iam.amazonaws.com/role"
            value: "arn:aws:iam::737635261618:role/_nd-cb-cbcore-configuration-worker-d1f1721f"
        envVars:
          - key: "DOCKER_TLS_CERTDIR"
            value: ""
          - key: "DOCKER_HOST"
            value: "tcp://localhost:2375"
        containers:
          - name: "buildbox"
            image: "737635261618.dkr.ecr.us-east-1.amazonaws.com/webops-buildbox:v0.6.3"
            alwaysPullImage: true
            command: "sleep"
            args: "99d"
            ttyEnabled: true
            workingDir: "/home/jenkins/agent"
            runAsGroup: "1000"
            runAsUser: "1000"
          - name: "docker-daemon"
            image: "docker:19.03.6-dind"
            privileged: true
            resourceLimitCpu: "2"
            resourceLimitMemory: "8Gi"
            resourceRequestCpu: "1"
            resourceRequestMemory: "1Gi"
            ttyEnabled: true
            workingDir: "/home/jenkins/agent"
        hostNetwork: false
        serviceAccount: "jenkins"
        podRetention: "onFailure"
        nodeUsageMode: NORMAL
        slaveConnectTimeout: 300
        slaveConnectTimeoutStr: "300"
        # idleMinutes: 5
        # idleMinutesStr: "5"
        # showRawYaml: false
        volumes:
          - emptyDirVolume:
              memory: false
              mountPath: "/var/lib/docker"
        yamlMergeStrategy: "override"
